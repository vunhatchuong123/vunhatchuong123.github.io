[ { "title": "WSL2 Code Environment", "url": "/posts/wsl2-code-environment/", "categories": "Code, Blog", "tags": "wsl2, customize, vim, tmux", "date": "2022-10-16 21:23:00 +0700", "snippet": "My WSL2 Code Environment that implements vim, tmux and ohmyzsh, in theory can be use with real Linux.WSL2WSL2 setup is really straight forward, just follow microsoft guide.Installed zsh, ohmyzsh git and implement git-credential-manager from Windows. lazygit fzfgit config --global credential.helper \"/mnt/c/Program\\ Files/Git/mingw64/bin/git-credential-manager-core.exe\"VimLook at my vim blog for the configuration.Tmuxtmux is a terminal multiplexer, I have configure tmux keybind to has the same logic as vim and scripts that implement tmux.Requirements xclip or xsel for clipboardPlugins name description tmux-plugins/tmux-resurrect Restore tmux environment after system restart TODO create auto install apps. Git-cred-manager auto-installation." }, { "title": "Vim Config", "url": "/posts/vim-config/", "categories": "Code, Blog", "tags": "vim, customize", "date": "2022-10-08 17:36:00 +0700", "snippet": "This is a collection of vim configs include keymaps, plugins, options.Since I mainly use VscodeVim, keymapping related will be the main focus.Frequently used actionsüî¢ - command accepts numeric prefix Capitalize an action will do it till EOL. Type the action 2 times like dd will do it for the whole line. ;{char}{char}: easymotion to find word include those 2 chars.General Command Description za Toggle fold % Jump to matching bracket Text-object Command Description üî¢is inner sentence üî¢ip inner paragraph Horizontal Movement Command Description üî¢) N sentence forward üî¢( N sentence backward üî¢} N paragraph forward üî¢{ N paragraph backward üî¢ [{ N times back to unclosed ‚Äò{‚Äò üî¢ ]) N times forward to unclosed ‚Äò)‚Äô üî¢f{char} to the Nth occurrence of {char} to the right üî¢F{char} to the Nth occurrence of {char} to the left Vertical Movement Command Description üî¢CTRL-U window N lines Upwards (default: 1/2 window) üî¢CTRL-V Vertical line selection (multicursor) Editing Command Description Note üî¢u undo last N changes ¬† üî¢CTRL-R redo last N undone changes ¬† ci{ Change inside ‚Äò{}‚Äô ¬† ca{ Change around ‚Äò{}‚Äô ¬† g~{motion} switch case for the text that is moved over with {motion} can use u/U instead of ~ {visual}~ switch case for highlighted text can use u/U instead of ~ Custom KeymappingOptionsPluginsCore name description wbthomason/packer.nvim A use-package inspired plugin manager for Neovim. Uses native packages, supports Luarocks dependencies, written in Lua, allows for expressive config nvim-lua/plenary.nvim plenary: full; complete; entire; absolute; unqualified. All the lua functions I don‚Äôt want to write twice. kyazdani42/nvim-web-devicons lua fork of vim-web-devicons for neovim nvim-telescope/telescope.nvim Find, Filter, Preview, Pick. All lua, all the time. lewis6991/gitsigns.nvim Git integration for buffers nvim-treesitter/nvim-treesitter Nvim Treesitter configurations and abstraction layer akinsho/bufferline.nvim A snazzy bufferline for Neovim hrsh7th/nvim-cmp A completion plugin for neovim coded in Lua. hrsh7th/cmp-path nvim-cmp source for path kyazdani42/nvim-tree.lua A file explorer tree for neovim written in lua numToStr/Comment.nvim :brain: :muscle: // Smart and powerful comment plugin for neovim. Supports treesitter, dot repeat, left-right/up-down motions, hooks, and more JoosepAlviste/nvim-ts-context-commentstring Neovim treesitter plugin for setting the commentstring based on the cursor location in a file. L3MON4D3/LuaSnip Snippet Engine for Neovim written in Lua. saadparwaiz1/cmp_luasnip luasnip completion source for nvim-cmp hrsh7th/cmp-buffer nvim-cmp source for buffer words antoinemadec/FixCursorHold.nvim Fix CursorHold Performance. jose-elias-alvarez/null-ls.nvim Use Neovim as a language server to inject LSP diagnostics, code actions, and more via Lua. williamboman/nvim-lsp-installer Neovim plugin that allows you to seamlessly manage LSP servers with :LspInstall. With full Windows support! neovim/nvim-lspconfig Quickstart configurations for the Nvim LSP client rafamadriz/friendly-snippets Set of preconfigured snippets for different languages. hrsh7th/cmp-nvim-lsp nvim-cmp source for neovim builtin LSP client nvim-lualine/lualine.nvim A blazing fast and easy to configure neovim statusline plugin written in pure lua. nvim-telescope/telescope-fzf-native.nvim FZF sorter for telescope written in c lukas-reineke/indent-blankline.nvim Indent guides for Neovim Pocco81/DAPInstall.nvim ü¶Ü A NeoVim plugin for managing several debuggers for Nvim-dap akinsho/toggleterm.nvim A neovim lua plugin to help easily manage multiple terminal windows mfussenegger/nvim-dap Debug Adapter Protocol client implementation for Neovim (&gt;= 0.5) Extra PluginsEvery plugin that works with Neovim works with LunarVim, here are some examples to get you started.Navigation pluginshopneovim motions on speed!{ \"phaazon/hop.nvim\", event = \"BufRead\", config = function() require(\"hop\").setup() vim.api.nvim_set_keymap(\"n\", \"s\", \":HopChar2&lt;cr&gt;\", { silent = true }) vim.api.nvim_set_keymap(\"n\", \"S\", \":HopWord&lt;cr&gt;\", { silent = true }) end,},lightspeedjetpack codebase navigation{ \"ggandor/lightspeed.nvim\", event = \"BufRead\",},minimapblazing fast minimap/scrollbar written in Rust{ 'wfxr/minimap.vim', run = \"cargo install --locked code-minimap\", -- cmd = {\"Minimap\", \"MinimapClose\", \"MinimapToggle\", \"MinimapRefresh\", \"MinimapUpdateHighlight\"}, config = function () vim.cmd (\"let g:minimap_width = 10\") vim.cmd (\"let g:minimap_auto_start = 1\") vim.cmd (\"let g:minimap_auto_start_win_enter = 1\") end,},numbjump to the line{ \"nacro90/numb.nvim\", event = \"BufRead\", config = function() require(\"numb\").setup { show_numbers = true, -- Enable 'number' for the window while peeking show_cursorline = true, -- Enable 'cursorline' for the window while peeking } end,},nvim-bqfbetter quickfix window{ \"kevinhwang91/nvim-bqf\", event = { \"BufRead\", \"BufNew\" }, config = function() require(\"bqf\").setup({ auto_enable = true, preview = { win_height = 12, win_vheight = 12, delay_syntax = 80, border_chars = { \"‚îÉ\", \"‚îÉ\", \"‚îÅ\", \"‚îÅ\", \"‚îè\", \"‚îì\", \"‚îó\", \"‚îõ\", \"‚ñà\" }, }, func_map = { vsplit = \"\", ptogglemode = \"z,\", stoggleup = \"\", }, filter = { fzf = { action_for = { [\"ctrl-s\"] = \"split\" }, extra_opts = { \"--bind\", \"ctrl-o:toggle-all\", \"--prompt\", \"&gt; \" }, }, }, }) end,},nvim-spectresearch and replace{ \"windwp/nvim-spectre\", event = \"BufRead\", config = function() require(\"spectre\").setup() end,},Gitgit-blameshow git blame{ \"f-person/git-blame.nvim\", event = \"BufRead\", config = function() vim.cmd \"highlight default link gitblame SpecialComment\" vim.g.gitblame_enabled = 0 end,},Treesitternvim-ts-autotagautoclose and autorename html tag{ \"windwp/nvim-ts-autotag\", config = function() require(\"nvim-ts-autotag\").setup() end,},nvim-ts-rainbowrainbow parentheses{ \"p00f/nvim-ts-rainbow\",},After installing ensure to enable it in your config.lua using:...lvim.builtin.treesitter.rainbow.enable = true...nvim-treesitter-contextShow current function at the top of the screen when function does not fit in screen{ \"romgrk/nvim-treesitter-context\", config = function() require(\"treesitter-context\").setup{ enable = true, -- Enable this plugin (Can be enabled/disabled later via commands) throttle = true, -- Throttles plugin updates (may improve performance) max_lines = 0, -- How many lines the window should span. Values &lt;= 0 mean no limit. patterns = { -- Match patterns for TS nodes. These get wrapped to match at word boundaries. -- For all filetypes -- Note that setting an entry here replaces all other patterns for this entry. -- By setting the 'default' entry below, you can control which nodes you want to -- appear in the context window. default = { 'class', 'function', 'method', }, }, } end },Telescope Extensionstelescope-fzf-native.nvimfzy style sorter that is compiled{ \"nvim-telescope/telescope-fzy-native.nvim\", run = \"make\", event = \"BufRead\",},Colorschemeslsp-colorslsp diagnostics highlight groups for non lsp colorschemes{ \"folke/lsp-colors.nvim\", event = \"BufRead\",},nvim-colorizercolor highlighter{ \"norcalli/nvim-colorizer.lua\", config = function() require(\"colorizer\").setup({ \"css\", \"scss\", \"html\", \"javascript\" }, { RGB = true, -- #RGB hex codes RRGGBB = true, -- #RRGGBB hex codes RRGGBBAA = true, -- #RRGGBBAA hex codes rgb_fn = true, -- CSS rgb() and rgba() functions hsl_fn = true, -- CSS hsl() and hsla() functions css = true, -- Enable all CSS features: rgb_fn, hsl_fn, names, RGB, RRGGBB css_fn = true, -- Enable all CSS *functions*: rgb_fn, hsl_fn }) end,},LSP Enhancementcmp-tabnineTabNine completion engine for hrsh7th/nvim-cmp{ \"tzachar/cmp-tabnine\", run = \"./install.sh\", requires = \"hrsh7th/nvim-cmp\", event = \"InsertEnter\",},lsp_signature.nvimhint when you type{ \"ray-x/lsp_signature.nvim\", event = \"BufRead\", config = function() require\"lsp_signature\".on_attach() end,},symbols-outline.nvima tree like view for symbols{ \"simrat39/symbols-outline.nvim\", config = function() require('symbols-outline').setup() end},trouble.nvimdiagnostics, references, telescope results, quickfix and location lists{ \"folke/trouble.nvim\", cmd = \"TroubleToggle\",},Also define keybindings in config.lualvim.builtin.which_key.mappings[\"t\"] = { name = \"Diagnostics\", t = { \"&lt;cmd&gt;TroubleToggle&lt;cr&gt;\", \"trouble\" }, w = { \"&lt;cmd&gt;TroubleToggle workspace_diagnostics&lt;cr&gt;\", \"workspace\" }, d = { \"&lt;cmd&gt;TroubleToggle document_diagnostics&lt;cr&gt;\", \"document\" }, q = { \"&lt;cmd&gt;TroubleToggle quickfix&lt;cr&gt;\", \"quickfix\" }, l = { \"&lt;cmd&gt;TroubleToggle loclist&lt;cr&gt;\", \"loclist\" }, r = { \"&lt;cmd&gt;TroubleToggle lsp_references&lt;cr&gt;\", \"references\" },},Generaldial.nvimextended incrementing/decrementing{ \"monaqa/dial.nvim\", event = \"BufRead\", config = function() local dial = require \"dial\" vim.cmd [[ nmap &lt;C-a&gt; &lt;Plug&gt;(dial-increment) nmap &lt;C-x&gt; &lt;Plug&gt;(dial-decrement) vmap &lt;C-a&gt; &lt;Plug&gt;(dial-increment) vmap &lt;C-x&gt; &lt;Plug&gt;(dial-decrement) vmap g&lt;C-a&gt; &lt;Plug&gt;(dial-increment-additional) vmap g&lt;C-x&gt; &lt;Plug&gt;(dial-decrement-additional) ]] dial.augends[\"custom#boolean\"] = dial.common.enum_cyclic { name = \"boolean\", strlist = { \"true\", \"false\" }, } table.insert(dial.config.searchlist.normal, \"custom#boolean\") -- For Languages which prefer True/False, e.g. python. dial.augends[\"custom#Boolean\"] = dial.common.enum_cyclic { name = \"Boolean\", strlist = { \"True\", \"False\" }, } table.insert(dial.config.searchlist.normal, \"custom#Boolean\") end,},glow.nvimpreview markdown in neovim-- You must install glow globally-- https://github.com/charmbracelet/glow-- yay -S glow{ \"npxbr/glow.nvim\", ft = {\"markdown\"} -- run = \"yay -S glow\"},neoscrollsmooth scrollingneuronnext generation note-taking {\"oberblastmeister/neuron.nvim\"},vim-surroundmappings to delete, change and add surroundings{ \"tpope/vim-surround\", -- make sure to change the value of `timeoutlen` if it's not triggering correctly, see https://github.com/tpope/vim-surround/issues/117 -- setup = function() -- vim.o.timeoutlen = 500 -- end},Language specificbraceylive edit html, css, and javascript{ \"turbio/bracey.vim\", cmd = {\"Bracey\", \"BracyStop\", \"BraceyReload\", \"BraceyEval\"}, run = \"npm install --prefix server\",},ThemeResource VscodeVim Roadmap Vim tips wiki" }, { "title": "Spring Boot Project", "url": "/posts/spring-boot/", "categories": "Code, Project", "tags": "java, spring-boot, api", "date": "2022-09-21 22:18:00 +0700", "snippet": "Spring Boot default project for SIU AILABGithub RepoSpring Oauth2 and microservicesGithub Repo" }, { "title": "SIU Rasa Chatbot", "url": "/posts/ailab-rasa/", "categories": "Code, Project", "tags": "rasa, python, nlp, docker, gitlab-ci", "date": "2022-09-21 22:02:00 +0700", "snippet": "My Rasa Chatbot project was created when I was in Internship for SIU AILAB for student admission intended for Facebook Messenger and personal website.Utilize docker and gitlab-ci for auto deployment.You can read a more detailed document and checkout code from this Github Repo." }, { "title": "My Keyboard Journey", "url": "/posts/keyboard-journey/", "categories": "Keyboard, Blog", "tags": "keyboard, qmk, customize", "date": "2022-09-21 21:44:00 +0700", "snippet": "This is a blog about my journey in the keyboard hobby and everything I learn along the way.40% LayoutDefinitionTU40BM40ResourcesSplit LayoutDefinitionTaken from splitkb docs: As the name implies, a split keyboard is a keyboard that is split, often into two halves. You‚Äôll have two separate pieces, connected by a cable or wirelessly. Most split keyboards use a TRRS/TRS cable to connect the two halves. The half that you connect to the computer is often called the master, and the half that is connected to the master is in turn called the slave.ErgonomicA split keyboard has the advantage that you can position it in a way that makes you feel comfortable. Often, you‚Äôll separate the halves to be at shoulder width, with your arms extending straight forward. This relieves strain from your wrists, since you now won‚Äôt need to bend your wrists anymore when you type.SofleSplit keyboard is not popular in my country so there‚Äôs a limited option to choose and I also don‚Äôt know how to DIY keyboards.Sofle, especially V1 is the one that catch my eye. You have 2 OLEDs, 2 rotary encoders.A more comfortable layout for my small hands than Sofle V2.I bought my Sofle from Kiwikey, unfortunately the knobs color is random and the TRS coil cable is broken so I need to buy a scuff one.Specs: Ocean Dream and Luna OLED. Akko Black On White keycaps. KTT Strawberry. Stacked Acrylic case.CorneAlthought Sofle has a lot of functionality, I‚Äôve always want a small/minimal keyboard. Corne is the pefect one that‚Äôs available in my country.Resources Compare Split KeyboardToolsKeycapsSwitchesModdingQMK Configuration" }, { "title": "All things about QMK", "url": "/posts/qmk/", "categories": "Keyboard, Tutorial", "tags": "qmk, customize, keyboard", "date": "2022-09-21 19:05:00 +0700", "snippet": "QMK is a firmware used to configure functionality for your keyboard. This is a collection of things I need to remember about QMK and keyboard configuration.Configure with QMKIf you want to change keymaps only, you can use VIA/VIAL to do that through a user-friendly interface.If you want to change anything else including OLED, config you have to setup QMK and build your own firmware.Via Your keyboard needs to have VIA enabled in rules.mk. Most boards will come with this option enabled by default. Otherwise, you can find VIA enabled keymap in qmk_firmware repository and build it yourself. On some unofficially keyboard, you need to have a .json file and load draft definition to be able to use Via.You can use VIA to change keymaps without flashing.VIA are hosted on this website. You can also download the software version.Vial Same as VIA, you also need VIAL enabled hex files.VIAL looks like the newer/better version of VIA which has additional features. VIA also doesn‚Äôt seem to have received any updates since 2020.You can download it from here. Nightly VIAL-enabled hex files are available here.Build your own firmwareTo setup QMK and build environment, you can follow the Official guide from QMK.These tools are required to build your firmware and flash your keyboard. QMK Firmware QMK ToolboxKeymapping Keycodes Overview KeymapDB of unique keymaps by VladislavK#5942OLED ConfigurationGuides and Tools What can you use an OLED for Convert your own image for OLED display QMK Logo Editor Convert GIF for OLED Waffle‚Äôs function to fix OLED flicker when timed out.Animations Bongo cat animation Revised bongo cat Random animations collection Luna, the keyboard pet Ocean dream animation Cyberpunk Arasaka GlitchKeymap Profiles andrewjrae xcase and qmk vim repo. drashna collection of func from others. Planck by ppy.Hex file Pre-built QMK VIA hex‚Äôs are built daily/nightly here Daily builds of develop hereResources Official QMK guide QMK Discord Server Best Git Practices for Working with QMK" }, { "title": "ISP Flash Arduino Pro Micro with Arduino Uno", "url": "/posts/isp-flash/", "categories": "Keyboard, Tutorial", "tags": "isp flash, arduino, qmk", "date": "2022-09-21 09:44:00 +0700", "snippet": "This post will guide you how to ISP Flash ATmega32u4 with another Pro Micro.I will be using Arduino Uno as a Programmer and Arduino Pro Micro as Target.Setup the Programmer Before flashing, be sure you have the same voltages on both devices, on the programmer and on the keyboard. So if you have for example Arduino Uno as a programmer, you can program Arduino Pro Micro 5V version, but not 3V!So, in this guide we will flash Arduino Pro Micro with ATmega32u4 running on 5V with Arduino Uno as programmer. Install Arduino IDE, for me it‚Äôs 2.0.0 Plug in your programmer to PC, for me it‚Äôs Arduino Uno. Open Arduino IDE, navigate to File &gt; Examples &gt; ArduinoISP &gt; ArduinoISP In Tools &gt; Board &gt; And select your programmer board, for me it‚Äôs Arduino Uno. Press upload button. And now you‚Äôre done!Wire Programmer to TargetWhen it finishes successfully, have your programmer ready. Now unplug the programmer, grab some wires, and wire the device. You can use a Breadboard if your jumper wires are loose. Programmer VCC =&gt; Keyboard VCC Programmer GND =&gt; Keyboard GND Programmer MISO (Arduino Uno pin D12) =&gt; Keyboard MISO (Arduino Pro Micro Pin 14) Programmer MOSI (Arduino Uno pin D11) =&gt; Keyboard MOSI (Arduino Pro Micro Pin 16) Programmer SCLK (Arduino Uno pin D13) =&gt; Keyboard SCLK (Arduino Pro Micro Pin 15) Programmer 10 pin (Arduino Uno pin D10) =&gt; Keyboard RESET (Arduino Pro Micro pin RST) Here are some Diagrams to help you with the process.Pins need to be connectedPro Micro pinoutConnect Uno with Pro Micro, follow the guide above Depending on the Programmer, you can choose to use the ICSP interface instead, I will use normal pinout.Wiring using Arduino Uno ICSP InterfaceBurn bootloader into Target Please be sure to double check that you have wired correctly.Now plug the Programmer into the PC. Open Arduino IDE. In Tools &gt; Board &gt; And select your programmer board, for me it‚Äôs Arduino Uno. Change the Board to Arduino Leonard for ATmega32u4. Choose Programmer: ‚ÄúArduino as ISP(ATmega32u4)‚Äù. Press Burn Bootloader.And then you‚Äôre done, you have an ISP flash a Pro Micro with another.Burn BootloaderResources Official guide from Arduino.Flash Pro Micro with QMKOne of the uses for the process is to use my Pro Micro to flash QMK for my keyboard. Install QMK Toolbox. Plug your Pro Micro to PC. Install required drivers when told to. Choose a hex file to flash into Pro Micro. Hit the reset button or connect GND to RST with tweezers. Hit flash or you can use auto-flash.You have successfully setup a Pro Micro for your keyboard. Congrats!" } ]
